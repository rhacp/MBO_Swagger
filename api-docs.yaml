openapi: 3.0.1
info:
  title: Music Band Organizer API Documentation
  version: v0
servers:
- url: http://localhost:8080
  description: API Documentation Link
paths:
  /api/users:
    get:
      tags:
      - user-controller
      description: Returns all existing users.
      summary: Get all users.
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
    post:
      tags:
      - user-controller
      description: Creates a user.
      summary: Create user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /api/rehearsals/{bandId}:
    post:
      tags:
      - rehearsal-controller
      operationId: createRehearsal
      parameters:
      - name: bandId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RehearsalDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RehearsalDTO'
  /api/bands/{userId}:
    post:
      tags:
      - band-controller
      operationId: createBand
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BandDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BandDTO'
  /api/users/{userId}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
    delete:
      tags:
      - user-controller
      operationId: deleteUserById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/users/filtered:
    get:
      tags:
      - user-controller
      operationId: getFilteredUsers
      parameters:
      - name: userFilterDTO
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UserFilterDTO'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
  /api/bands:
    get:
      tags:
      - band-controller
      operationId: getBands
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BandDTO'
  /api/bands/{bandId}:
    get:
      tags:
      - band-controller
      operationId: getBandById
      parameters:
      - name: bandId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BandDTO'
    delete:
      tags:
      - band-controller
      operationId: deleteBandById
      parameters:
      - name: bandId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Band:
      type: object
      properties:
        id:
          type: integer
          format: int64
        bandName:
          type: string
        bandDescription:
          type: string
        rehearsalList:
          type: array
          items:
            $ref: '#/components/schemas/Rehearsal'
        postList:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        userList:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        postTitle:
          type: string
        postDescription:
          type: string
        postGenre:
          type: string
        postBand:
          $ref: '#/components/schemas/Band'
    Rehearsal:
      type: object
      properties:
        id:
          type: integer
          format: int64
        rehearsalState:
          type: string
          enum:
          - DUE
          - DONE
        rehearsalDate:
          type: string
          format: date
        rehearsalTime:
          type: string
          format: date-time
        rehearsalDurationHours:
          type: integer
          format: int32
        rehearsalBand:
          $ref: '#/components/schemas/Band'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
          format: date
        email:
          type: string
        pastExperience:
          type: object
          additionalProperties:
            type: string
        bandList:
          type: array
          items:
            $ref: '#/components/schemas/Band'
        bandRole:
          type: object
          additionalProperties:
            type: string
    UserDTO:
      required:
      - birthday
      - email
      - firstName
      - lastName
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          maxLength: 30
          minLength: 3
          type: string
        lastName:
          maxLength: 30
          minLength: 3
          type: string
        birthday:
          type: string
          format: date
        email:
          type: string
        pastExperience:
          type: object
          additionalProperties:
            type: string
        bandList:
          type: array
          items:
            $ref: '#/components/schemas/Band'
        bandRole:
          type: object
          additionalProperties:
            type: string
    RehearsalDTO:
      required:
      - rehearsalDate
      - rehearsalDurationHours
      - rehearsalTime
      type: object
      properties:
        id:
          type: integer
          format: int64
        state:
          type: string
          enum:
          - DUE
          - DONE
        rehearsalDate:
          type: string
          format: date
        rehearsalTime:
          type: string
          format: date-time
        rehearsalDurationHours:
          maximum: 9
          minimum: 1
          type: integer
          format: int32
        rehearsalBand:
          $ref: '#/components/schemas/Band'
    BandDTO:
      required:
      - bandDescription
      - bandName
      type: object
      properties:
        id:
          type: integer
          format: int64
        bandName:
          maxLength: 30
          minLength: 3
          type: string
        bandDescription:
          maxLength: 200
          minLength: 3
          type: string
        rehearsalList:
          type: array
          items:
            $ref: '#/components/schemas/Rehearsal'
        postList:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        userList:
          type: array
          items:
            $ref: '#/components/schemas/User'
    UserFilterDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
          format: date-time
        email:
          type: string
        pastExperience:
          type: string
